#ifndef IKSU2000_H
#define IKSU2000_H

#include <QObject>
#include <QtPlugin>
#include <QWidget>
#include "cpainterface.h"
#include "dialog.h"
#include "setupdialog.h"
#include <QSerialPort>
#include <QSerialPortInfo>
#include <QDate>
#include <QThread>




class Iksu2000Plugin : public CPAInterface
{
    Q_OBJECT
    Q_PLUGIN_METADATA(IID "by.alexpozniak.kalibri2.cpainterface" FILE "iksu2000plugin.json")
    Q_INTERFACES(CPAInterface)
public:
    const char enter[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x36,0x34,0x3B,0x33,0x38,0x33,0x30,0x30,0x0D};
    const char reset[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x34,0x36,0x39,0x3B,0x31,0x3B,0x31,0x3B,0x32,0x3B,0x35,0x34,0x38,0x30,0x32,0x0D};
    const char exec1[22] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x34,0x36,0x39,0x3B,0x31,0x3B,0x31,0x3B,0x31,0x3B,0x39,0x37,0x34,0x36,0x0D};
    const char down[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x36,0x36,0x3B,0x36,0x32,0x38,0x37,0x37,0x0D};
    const char up[23] = {0xff,0x3a,0x31,0x3b,0x31,0x31,0x3b,0x33,0x37,0x3b,0x30,0x3b,0x31,0x3b,0x36,0x37,0x3b,0x32,0x36,0x30,0x31,0x32,0x0D};
    const char but0[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x35,0x31,0x3B,0x35,0x30,0x35,0x34,0x33,0x0D};
    const char but1[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x35,0x32,0x3B,0x31,0x33,0x36,0x37,0x39,0x0D};
    const char but2[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x36,0x38,0x3B,0x33,0x38,0x32,0x39,0x37,0x0D};
    const char but3[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x38,0x34,0x3B,0x32,0x32,0x32,0x36,0x39,0x0D};
    const char but4[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x35,0x33,0x3B,0x34,0x32,0x33,0x35,0x30,0x0D};
    const char but5[22] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x36,0x39,0x3B,0x31,0x34,0x33,0x32,0x0D};
    const char but6[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x38,0x35,0x3B,0x35,0x30,0x39,0x34,0x30,0x0D};
    const char but7[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x35,0x34,0x3B,0x33,0x38,0x32,0x35,0x32,0x0D};
    const char but8[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x37,0x30,0x3B,0x33,0x38,0x33,0x35,0x31,0x0D};
    const char but9[23] = {0xFF,0x3A,0x31,0x3B,0x31,0x31,0x3B,0x33,0x37,0x3B,0x30,0x3B,0x31,0x3B,0x38,0x36,0x3B,0x31,0x34,0x30,0x37,0x36,0x0D};
    const char minus[23]= {0xff,0x3a,0x31,0x3b,0x31,0x31,0x3b,0x33,0x37,0x3b,0x30,0x3b,0x31,0x3b,0x35,0x30,0x3b,0x32,0x31,0x38,0x37,0x30,0x0D};
    const char test1[12] = {0xFF,0x3A,0x31,0x3B,0x30,0x3B,0x35,0x30,0x37,0x33,0x30, 0x0d};
    Iksu2000Plugin();
    ~Iksu2000Plugin();
    void initialization(QSettings *settings) Q_DECL_OVERRIDE;
    QString getName() Q_DECL_OVERRIDE;
    int showInfo() Q_DECL_OVERRIDE;
    void test() Q_DECL_OVERRIDE;
    bool setValue(float value, measurement type_value) Q_DECL_OVERRIDE;
    bool setup() Q_DECL_OVERRIDE;
    QString getType() Q_DECL_OVERRIDE;
    QString getSN() Q_DECL_OVERRIDE;
    QString getSKN() Q_DECL_OVERRIDE;
    QString getSROK() Q_DECL_OVERRIDE;

private:
    QSerialPort * serial;   //Порт-опроса
    QString portName;       //Название порта
    QString ZN;             //Заводской номер
    QString SKN;            //Номер свидетельства калибровки
    QDate SROK;           //Срок действия свидетельства до ...
    QSettings * settings;   //Ссылка хранилища настроек
    bool serial_open;
    Dialog iksu2000Dialog;
    int last_mode;      //режим генерации который последний раз задавался
    int Ctype=0;        //Текущий пункт в подменю термопар
    int prev_command;           //преведущая комада для ИКСУ-2000
    void sendCOM(int command);  //отправка команды на ИКСУ-2000


signals:
    void set_value_ok();
    void set_value_error();
    void log(QString message,Qt::GlobalColor category = Qt::white);

private slots:
    void on_serrial_error(QSerialPort::SerialPortError error);
    void on_close();

//public slots:
//    void on_enter();
//    void on_reset();
//    void on_ce();
//    void on_down();
//    void on_up();
//    void on_minus();
//    void on_0();
//    void on_1();
//    void on_2();
//    void on_3();
//    void on_4();
//    void on_5();
//    void on_6();
//    void on_7();
//    void on_8();
//    void on_9();


};


#endif // IKSU2000_H
